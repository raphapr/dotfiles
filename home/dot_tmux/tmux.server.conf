# .tmux.server.conf
# Author: Raphael P. Ribeiro

unbind C-b              ## unbind some default keybindings
unbind C-o              # clear rotate window ‘up’  hotkey
set -g prefix C-o       ## set prefix key to ctrl-o

set -g default-terminal "screen-256color"           # turn on 256 color support in tmux
set -ga terminal-overrides ',*256color*:Tc'         # add True Color support
set -g display-panes-time 3000                      # increase tmux pane numbers display time `ctrl-b q`
set -g history-limit 50000                          # set scrollback buffer size
set -g focus-events on                              # focus events enabled for terminals that support them
set -sg escape-time 0                               # fix vim powerline delay
setw -g xterm-keys on                               # pass through xterm keys
setw -g aggressive-resize on                        # set agressive resize. super useful when using "grouped sessions" and multi-monitor setup.
setw -g mode-keys vi                                # navigate using vim-style keys

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# splits open in same working directory
bind '%' split-window -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"

# sync panes
bind-key m set-window-option synchronize-panes on \;\
  display-message "Sync panes ON"
bind-key M set-window-option synchronize-panes off \;\
  set-window-option pane-border-style default \;\
  display-message "Sync panes OFF"

# CTRL+a a to return beginning of line
bind a send-prefix

# better mnemonics for splitting panes!
bind \\ split-window -h
bind | split-window -h
bind = split-window -v

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# vim / xmonad style bindings for pane movement
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# copy-paste vim mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# copy/paste using vim-style keys
unbind p
bind p paste-buffer

# kill Q q
unbind Q
bind Q confirm-before "kill-window"

# swap window
bind-key -n S-Left swap-window -t -1\; select-window -t -1
bind-key -n S-Right swap-window -t +1\; select-window -t +1

# Toggle between the last two windows
bind b last-window

# Send pane: <prefix> s, <prefix> j
bind-key C-p command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Send window: <prefix> s, <prefix> j
bind-key C-w command-prompt -p "move window to:"  "move-window -t '%%'"

# move the pane in a clockwise direction
bind-key a swap-pane -D

set -g mouse on
bind e set -g mouse on \; display "Mouse Mode ON"
bind E set -g mouse off \; display "Mouse Mode OFF"

# colors variables
tm_color_active=colour208
tm_color_inactive=colour241
tm_color_feature=colour142
tm_color_bg=colour234

# text color
set-window-option -g mode-style fg=black,bg=colour206

# activity colors
set -g window-status-activity-style bg=black,fg=colour242

# fiddle with colors of status bar
set -g status-style fg=$tm_color_active,bg=$tm_color_bg

# fiddle with colors of inactive windows
setw -g window-status-style fg=$tm_color_inactive,bg=$tm_color_bg
setw -g window-status-format "#I:#W"

# change color of active window
set-window-option -g window-status-current-format "#[bold]#I:#W"
setw -g window-status-current-style fg=$tm_color_active,bg=colour234

# set color of regular and active panes
set -g pane-border-style fg=$tm_color_inactive,bg=black
set -g pane-active-border-style fg=$tm_color_active,bg=black

# set color of command line
set -g message-style fg=$tm_color_active,bg=$tm_color_bg
