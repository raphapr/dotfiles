# Preambule         -------------------------------------------- {{{

unbind C-b              ## unbind some default keybindings
unbind C-o              # clear rotate window ‘up’  hotkey
set -g prefix C-o       ## set prefix key to ctrl-o

# }}}
# Plugins           -------------------------------------------- {{{

set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  sainnhe/tmux-fzf                 \
  laktak/extrakto                  \
  wfxr/tmux-fzf-url                \
  tmux-plugins/tmux-online-status  \
  tmux-plugins/tmux-battery        \
  catppuccin/tmux#v2.1.2           \
'

set -g @extrakto_popup_size "50%"
set -g @extrakto_popup_position "C"
set -g @fzf-url-bind 'u'

# }}}
# Status Line       -------------------------------------------- {{{

set -g @catppuccin_flavor "mocha"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# Configure Online
set -g @online_icon "ok"
set -g @offline_icon "nok"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold]  #S },#{#[bg=#{@thm_bg},fg=#{@thm_green}]  #S }}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}]  #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_blue}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path\}\}\} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"

# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_bg}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] 󰖩 on ,#[fg=#{@thm_red},bold]#[reverse] 󰖪 off }"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_blue}] 󰭦 %d-%m-%Y 󰅐 %H:%M "

# Configure Tmux
set -g status-position bottom
set -g status-style "bg=#{@thm_bg}"
set -g status-justify "absolute-centre"

# pane border look and feel
setw -g pane-border-status bottom
setw -g pane-border-format ""
setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_overlay_0}"
setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_surface_0}"
setw -g pane-border-lines single

# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "Window"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}]│"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"

# }}}
# Global Settings   -------------------------------------------- {{{

set -g default-terminal "tmux-256color"             # turn on 256 color support in tmux
set -ag terminal-overrides ",$TERM:RGB"             # add True Color support
set -g default-shell "/usr/bin/fish"                # set fish as the shell started in tmux
set -g display-panes-time 3000                      # increase tmux pane numbers display time `ctrl-b q`
set -g history-limit 30000                          # set scrollback buffer size
set -g focus-events on                              # focus events enabled for terminals that support them
set -sg escape-time 0                               # fix vim powerline delay
setw -g xterm-keys on                               # pass through xterm keys
setw -g aggressive-resize on                        # set agressive resize. super useful when using "grouped sessions" and multi-monitor setup.
setw -g mode-keys vi                                # navigate using vim-style keys

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# Enable Yazi's image preview to work correctly in tmux
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# When destroy the last shell in a session, it switches to another active session
set -g detach-on-destroy off

# }}}
# Maps              -------------------------------------------- {{{

# switch tmux sessions
bind -r P switch-client -p
bind -r N switch-client -n

# splits open in same working directory
bind '%' split-window -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"

# sync panes
bind m set-window-option synchronize-panes on \;\
  display-message "Sync panes ON"
bind M set-window-option synchronize-panes off \;\
  set-window-option pane-border-style default \;\
  display-message "Sync panes OFF"

# CTRL+a a to return beginning of line
bind a send-prefix

# bind r to reloading the config file
bind r source-file ~/.tmux/tmux.conf \; display "Reloaded tmux config file."

# better mnemonics for splitting panes!
bind \\ split-window -h
bind | split-window -h
bind = split-window -v

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# vim / xmonad style bindings for pane movement
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# copy-paste vim mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# copy/paste using vim-style keys
unbind p
bind p paste-buffer

# kill Q q
unbind Q
bind Q confirm-before "kill-window"

# swap window
bind -n S-Left swap-window -t -1\; select-window -t -1
bind -n S-Right swap-window -t +1\; select-window -t +1

# Toggle between the last two windows
bind b last-window
bind -n F1 last-window

# Send pane: <prefix> s, <prefix> j
bind C-p command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Send window: <prefix> s, <prefix> j
bind C-w command-prompt -p "move window to:"  "move-window -t '%%'"

# move the pane in a clockwise direction
bind a swap-pane -D

# tmux-sessionizer
unbind i
bind i display-popup -E "$HOME/.local/share/mise/installs/cargo-tmux-sessionizer/latest/bin/tms"

unbind o
bind o display-popup -E "$HOME/.local/share/mise/installs/cargo-tmux-sessionizer/latest/bin/tms switch"

bind * confirm-before -p "Kill session?" "run-shell \"$HOME/.cargo/bin/tms kill\""
bind & command-prompt -p "Rename active session to: " "run-shell '$HOME/.cargo/bin/tms rename %1'".

# }}}
# Mouse Mode        -------------------------------------------- {{{

# Mouse mode is on by default
set -g mouse on
bind e set -g mouse on \; display "Mouse Mode ON"
bind E set -g mouse off \; display "Mouse Mode OFF"

# }}}
# Copy Mode         -------------------------------------------- {{{

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard" \;\
  send-keys -X clear-selection

# Copy from tmux copy buffer to X selection via xclip
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe  "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Double click: Select & Copy (word)
bind -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -sel primary"
bind -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -sel primary"

# Triple click: Select & Copy (line)
bind -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xclip -in -sel primary"
bind -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xclip -in -sel primary"

# }}}
# TPM initilization -------------------------------------------- {{{

run '~/.tmux/plugins/tpm/tpm'

# }}}
