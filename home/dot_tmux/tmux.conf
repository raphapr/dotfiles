# .tmux.conf
# Author: Raphael P. Ribeiro

# Preambule         ------------------------------------- {{{

unbind C-b              ## unbind some default keybindings
unbind C-o              # clear rotate window ‘up’  hotkey
set -g prefix C-o       ## set prefix key to ctrl-o

# }}}
# Plugins           ------------------------------------- {{{

set -g @tpm_plugins '          \
  tmux-plugins/tpm             \
  sainnhe/tmux-fzf             \
  laktak/extrakto              \
  wfxr/tmux-fzf-url            \
  raphapr/catppuccin-tmux      \
'

set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_host "on"
set -g @catppuccin_window_tabs_enabled on

set -g @extrakto_split_direction "v"
set -g @fzf-url-bind 'u'

# }}}
# General Options   ------------------------------------- {{{

set -g default-terminal "tmux-256color"             # turn on 256 color support in tmux
set -ag terminal-overrides ",$TERM:RGB"             # add True Color support
set -g default-shell "/usr/bin/fish"                # set fish as the shell started in tmux
set -g display-panes-time 3000                      # increase tmux pane numbers display time `ctrl-b q`
set -g history-limit 50000                          # set scrollback buffer size
set -g focus-events on                              # focus events enabled for terminals that support them
set -sg escape-time 0                               # fix vim powerline delay
setw -g xterm-keys on                               # pass through xterm keys
setw -g aggressive-resize on                        # set agressive resize. super useful when using "grouped sessions" and multi-monitor setup.
setw -g mode-keys vi                                # navigate using vim-style keys

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# }}}
# Maps              ------------------------------------- {{{

# splits open in same working directory
bind '%' split-window -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"

# sync panes
bind-key m set-window-option synchronize-panes on \;\
  display-message "Sync panes ON"
bind-key M set-window-option synchronize-panes off \;\
  set-window-option pane-border-style default \;\
  display-message "Sync panes OFF"

# CTRL+a a to return beginning of line
bind a send-prefix

# bind r to reloading the config file
bind r source-file ~/.tmux/tmux.conf \; display "Reloaded tmux config file."

# better mnemonics for splitting panes!
bind \\ split-window -h
bind | split-window -h
bind = split-window -v

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# vim / xmonad style bindings for pane movement
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# copy-paste vim mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# copy/paste using vim-style keys
unbind p
bind p paste-buffer

# kill Q q
unbind Q
bind Q confirm-before "kill-window"

# swap window
bind-key -n S-Left swap-window -t -1\; select-window -t -1
bind-key -n S-Right swap-window -t +1\; select-window -t +1

# Toggle between the last two windows
bind b last-window

# Send pane: <prefix> s, <prefix> j
bind-key C-p command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Send window: <prefix> s, <prefix> j
bind-key C-w command-prompt -p "move window to:"  "move-window -t '%%'"

# move the pane in a clockwise direction
bind-key a swap-pane -D

# open cht.sh
bind-key y run-shell "tmux popup -y 40 -w 110 -h 30 -E $HOME/.tmux/scripts/tmux-cht.sh"

unbind i
bind-key i display-popup -E "$HOME/.cargo/bin/tms"

unbind o
bind-key o display-popup -E "$HOME/.cargo/bin/tms switch"

# }}}
# Mouse Mode        ------------------------------------- {{{

# Mouse mode is on by default
set -g mouse on
bind e set -g mouse on \; display "Mouse Mode ON"
bind E set -g mouse off \; display "Mouse Mode OFF"

# }}}
# Copy Mode         ------------------------------------- {{{

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard" \;\
  send-keys -X clear-selection

# Copy from tmux copy buffer to X selection via xclip
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe  "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Double click: Select & Copy (word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -sel primary"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -sel primary"

# Triple click: Select & Copy (line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xclip -in -sel primary"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xclip -in -sel primary"

# }}}
# TPM initilization ------------------------------------- {{{

run '~/.tmux/plugins/tpm/tpm'

# }}}
