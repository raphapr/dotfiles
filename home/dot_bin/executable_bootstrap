#!/bin/bash

# This file contains step-by-step installation and configuration instructions for setting up Arch/Manjaro Linux on a new machine.

declare -x EDITOR=vim
declare -r USER=raphael
declare -r HOME=/home/$USER
declare -r PKGLIST=$HOME/.pkglist
declare -r PKG_OFFICIAL=$PKGLIST/official
declare -r PKG_AUR=$PKGLIST/aur
declare -r FONT_DIR=$HOME/.local/share/fonts

# pacman update and dependencies
sudo pacman -Syu --needed

sudo pacman -S --noconfirm --needed \
  yay vim python python-pip fish make cmake gcc fakeroot patch \
  dnsutils nodejs npm ruby ruby-rdoc ruby-docs wget unzip cronie git gopls

# sync sensitive - not versioned - dotfiles
ln -sf ~/Dropbox ~/Cloud
ln -sf ~/Cloud/sync/envsen ~/.envsen
ln -sf ~/Cloud/sync/ssh_config ~/.ssh/config
ln -sf ~/Cloud/sync/krew ~/.krew
mkdir ~/.asdf && ln -sf ~/Cloud/sync/asdf-plugins ~/.asdf/plugins

# aftersleep script
sudo cp ${HOME}/Cloud/sync/aftersleep.sh /usr/lib/systemd/system-sleep/aftersleep
sudo chown root: /usr/lib/systemd/system-sleep/aftersleep

# geoclue
sudo cp ~/Cloud/sync/geoclue.conf /etc/geoclue/geoclue.conf

# pip / python packages
sudo pip install neovim virtualfish flake8 saws ptpython ipython boto3 yamllint pillow-simd

# npm prefix configuration
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

# npm packages
npm install -g git-recent jsonlint

if ! grep -q "[pritunl]" /etc/pacman.conf; then
  sudo tee -a /etc/pacman.conf <<EOF
[pritunl]
Server = https://repo.pritunl.com/stable/pacman
EOF
  sudo pacman-key --keyserver hkp://keyserver.ubuntu.com -r 7568D9BB55FF9E5287D586017AE645C0CF8E292A
  sudo pacman-key --lsign-key 7568D9BB55FF9E5287D586017AE645C0CF8E292A
  sudo pacman -Sy
  sudo pacman -S pritunl-client-electron
fi

# symlink tmux conf
ln -sf ~/.tmux.conf ~/.tmux/tmux.conf

# fonts
echo " Installing fonts"
if [[ ! -d "$FONT_DIR" ]]; then
  mkdir -p "$FONT_DIR"
fi
cp -rf $HOME/.config/rofi/fonts/* "$FONT_DIR"
fc-cache

# packages
echo "Install official packages"
for pkg in $(cat $PKG_OFFICIAL); do
  sudo pacman -S --needed --noconfirm "${pkg}" || echo "${pkg} failed." >>"${PKGLOG}"
done

echo "Install AUR packages"
for pkg in $(cat $PKG_AUR); do
  yay -S --needed --noconfirm "${pkg}" || echo "${pkg} failed." >>"${PKGLOG}"
done

pushd ${HOME} || exit
asdf install
popd || exit

# enable systemd user services
systemctl --user daemon-reload
systemctl --user --now enable psd
systemctl --user --now enable gopls
