#! /bin/bash

########################################
# Check if script already running

lf=/tmp/pidLockFile
# create empty lock file if none exists
touch $lf
read lastPID < $lf
# if lastPID is not null and a process with that pid exists , exit
[ ! -z "$lastPID" -a -d /proc/$lastPID ] && exit
echo not running
# save my pid in the lock file
echo $$ > $lf

########################################

SLEEP_TIME=5   # Default time between checks.
SAFE_PERCENT=30  # Still safe at this level.
DANGER_PERCENT=15  # Warn when battery at this level.
CRITICAL_PERCENT=8  # Hibernate when battery at this level.
 
export DISPLAY=:0.0

function notify
{
    notify-send "Bateria baixa" "Conecte o notebook a um adaptador!" -i /usr/share/icons/Numix/scalable/status/battery-empty-symbolic.svg
}
 
function final_warning
{
    killall notify-osd
    notify-send "Alerta! " "O computador ir√° hibernar dentro de 60 segundos" -i /usr/share/icons/Numix/scalable/status/battery-empty-symbolic.svg
    sleep 60
}

while [ true ]; do
    if [[ -n $(acpi -b | grep -i discharging) ]]; then
        #pm-powersave true
        rem_bat=$(acpi -b | grep -Eo "[0-9]+%" | grep -Eo "[0-9]+")
 
        if [[ $rem_bat -gt $SAFE_PERCENT ]]; then
            SLEEP_TIME=10
        else
            SLEEP_TIME=5
            if [[ $rem_bat -le $DANGER_PERCENT ]]; then
                SLEEP_TIME=2
                notify
            fi
            if [[ $rem_bat -le $CRITICAL_PERCENT ]]; then
                final_warning
                SLEEP_TIME=1
                i3exit hibernate
            fi
        fi
    else
        SLEEP_TIME=10
    fi
 
    sleep ${SLEEP_TIME}m
 
done
